{"name": "Tab More has correct name and a content.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <framework.tests.widgets_test.TestWidgets.TestTabs object at 0x000001E1D72F5450>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"160838ee42015d2f2ac39080c6c1423a\")>\n\n    @allure.title('Tab More has correct name and a content.')\n    def test_more_tab(self, driver):\n        \"\"\"Tab More has correct name and a content.\"\"\"\n        tabs_page = TabsPage(driver, self.tabs_page_link)\n        tabs_page.open()\n>       actual_tab_name, tab_content_length = tabs_page.check_more_tab()\n\nframework\\tests\\widgets_test.py:232: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nframework\\pages\\widgets_page.py:314: in check_more_tab\n    more_tab_button = self.element_is_clickable(self.locators.TAB_MORE)\nframework\\pages\\base_page.py:68: in element_is_clickable\n    return wait(self.driver, timeout).until(EC.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"160838ee42015d2f2ac39080c6c1423a\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x000001E1D7379EE0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "description": "Tab More has correct name and a content.", "steps": [{"name": "Checks content of more tab.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"G:\\testing_framework\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"G:\\testing_framework\\testing_framework_selenium_pytest\\framework\\pages\\widgets_page.py\", line 314, in check_more_tab\n    more_tab_button = self.element_is_clickable(self.locators.TAB_MORE)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"G:\\testing_framework\\testing_framework_selenium_pytest\\framework\\pages\\base_page.py\", line 68, in element_is_clickable\n    return wait(self.driver, timeout).until(EC.element_to_be_clickable(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"G:\\testing_framework\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1684171648020, "stop": 1684171653215}], "start": 1684171642176, "stop": 1684171653215, "uuid": "c562b00b-becf-463a-a986-dd96b7980c9c", "historyId": "72e993c79daa83823833926844a9a558", "testCaseId": "72e993c79daa83823833926844a9a558", "fullName": "framework.tests.widgets_test.TestTabs#test_more_tab", "labels": [{"name": "suite", "value": "Widgets tab"}, {"name": "feature", "value": "Tabs"}, {"name": "parentSuite", "value": "framework.tests"}, {"name": "subSuite", "value": "TestWidgets"}, {"name": "host", "value": "Lexx42"}, {"name": "thread", "value": "11292-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "framework.tests.widgets_test"}]}