{"name": "Test user can select radio buttons.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x003B8893+48451]\n\t(No symbol) [0x0034B8A1]\n\t(No symbol) [0x00255058]\n\t(No symbol) [0x00280467]\n\t(No symbol) [0x0028069B]\n\t(No symbol) [0x002ADD92]\n\t(No symbol) [0x0029A304]\n\t(No symbol) [0x002AC482]\n\t(No symbol) [0x0029A0B6]\n\t(No symbol) [0x00277E08]\n\t(No symbol) [0x00278F2D]\n\tGetHandleVerifier [0x00618E3A+2540266]\n\tGetHandleVerifier [0x00658959+2801161]\n\tGetHandleVerifier [0x0065295C+2776588]\n\tGetHandleVerifier [0x00442280+612144]\n\t(No symbol) [0x00354F6C]\n\t(No symbol) [0x003511D8]\n\t(No symbol) [0x003512BB]\n\t(No symbol) [0x00344857]\n\tBaseThreadInitThunk [0x767E6BA9+25]\n\tRtlGetFullPathName_UEx [0x77098F9F+1215]\n\tRtlGetFullPathName_UEx [0x77098F6D+1165]", "trace": "self = <framework.tests.elements_test.TestElements.TestRadioButton object at 0x000001E1D7367FD0>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6bb41a53b540398d8eba7153f4430bbe\")>, action = 'no'\n\n    @allure.title('Test user can select radio buttons.')\n    @pytest.mark.parametrize('action', ['yes', 'impressive', 'no'])\n    def test_radio_button(self, driver, action: str):\n        \"\"\"Test user can select radio buttons.\"\"\"\n        radio_button_page = RadioButtonPage(driver, 'https://demoqa.com/radio-button')\n        radio_button_page.open()\n        radio_button_page.click_on_the_radio_button(action)\n>       output = radio_button_page.get_radiobutton_output_result()\n\nframework\\tests\\elements_test.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nframework\\pages\\elements_page.py:138: in get_radiobutton_output_result\n    return self.element_is_present(self.locators.OUTPUT_RESULT).text\nframework\\pages\\base_page.py:43: in element_is_present\n    return wait(self.driver, timeout).until(EC.presence_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6bb41a53b540398d8eba7153f4430bbe\")>, method = <function presence_of_element_located.<locals>._predicate at 0x000001E1D70BB7E0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x003B8893+48451]\nE       \t(No symbol) [0x0034B8A1]\nE       \t(No symbol) [0x00255058]\nE       \t(No symbol) [0x00280467]\nE       \t(No symbol) [0x0028069B]\nE       \t(No symbol) [0x002ADD92]\nE       \t(No symbol) [0x0029A304]\nE       \t(No symbol) [0x002AC482]\nE       \t(No symbol) [0x0029A0B6]\nE       \t(No symbol) [0x00277E08]\nE       \t(No symbol) [0x00278F2D]\nE       \tGetHandleVerifier [0x00618E3A+2540266]\nE       \tGetHandleVerifier [0x00658959+2801161]\nE       \tGetHandleVerifier [0x0065295C+2776588]\nE       \tGetHandleVerifier [0x00442280+612144]\nE       \t(No symbol) [0x00354F6C]\nE       \t(No symbol) [0x003511D8]\nE       \t(No symbol) [0x003512BB]\nE       \t(No symbol) [0x00344857]\nE       \tBaseThreadInitThunk [0x767E6BA9+25]\nE       \tRtlGetFullPathName_UEx [0x77098F9F+1215]\nE       \tRtlGetFullPathName_UEx [0x77098F6D+1165]\n\n..\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "description": "Test user can select radio buttons.", "steps": [{"name": "Click on radio button.", "status": "passed", "steps": [{"name": "Click on radio button no", "status": "passed", "start": 1684170717204, "stop": 1684170717268}], "parameters": [{"name": "choice", "value": "'no'"}], "start": 1684170717204, "stop": 1684170717269}, {"name": "Returns output result of active radio button.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x003B8893+48451]\n\t(No symbol) [0x0034B8A1]\n\t(No symbol) [0x00255058]\n\t(No symbol) [0x00280467]\n\t(No symbol) [0x0028069B]\n\t(No symbol) [0x002ADD92]\n\t(No symbol) [0x0029A304]\n\t(No symbol) [0x002AC482]\n\t(No symbol) [0x0029A0B6]\n\t(No symbol) [0x00277E08]\n\t(No symbol) [0x00278F2D]\n\tGetHandleVerifier [0x00618E3A+2540266]\n\tGetHandleVerifier [0x00658959+2801161]\n\tGetHandleVerifier [0x0065295C+2776588]\n\tGetHandleVerifier [0x00442280+612144]\n\t(No symbol) [0x00354F6C]\n\t(No symbol) [0x003511D8]\n\t(No symbol) [0x003512BB]\n\t(No symbol) [0x00344857]\n\tBaseThreadInitThunk [0x767E6BA9+25]\n\tRtlGetFullPathName_UEx [0x77098F9F+1215]\n\tRtlGetFullPathName_UEx [0x77098F6D+1165]\n\n", "trace": "  File \"G:\\testing_framework\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"G:\\testing_framework\\testing_framework_selenium_pytest\\framework\\pages\\elements_page.py\", line 138, in get_radiobutton_output_result\n    return self.element_is_present(self.locators.OUTPUT_RESULT).text\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"G:\\testing_framework\\testing_framework_selenium_pytest\\framework\\pages\\base_page.py\", line 43, in element_is_present\n    return wait(self.driver, timeout).until(EC.presence_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"G:\\testing_framework\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1684170717269, "stop": 1684170722369}], "parameters": [{"name": "action", "value": "'no'"}], "start": 1684170713441, "stop": 1684170722390, "uuid": "95790b70-616e-4283-8457-160498975b39", "historyId": "906ba45f8479d216592b863f28bfc745", "testCaseId": "6b24657a3bf20f2cc964e2617263f81f", "fullName": "framework.tests.elements_test.TestRadioButton#test_radio_button", "labels": [{"name": "feature", "value": "Radio Button"}, {"name": "suite", "value": "Elements tab"}, {"name": "parentSuite", "value": "framework.tests"}, {"name": "subSuite", "value": "TestElements"}, {"name": "host", "value": "Lexx42"}, {"name": "thread", "value": "11292-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "framework.tests.elements_test"}]}