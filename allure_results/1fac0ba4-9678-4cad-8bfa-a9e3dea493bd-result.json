{"name": "Test user can change number of rows in the table.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <select aria-label=\"rows per page\">...</select> is not clickable at point (1056, 891). Other element would receive the click: <span>...</span>\n  (Session info: chrome=113.0.5672.93)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x003B8893+48451]\n\t(No symbol) [0x0034B8A1]\n\t(No symbol) [0x00255058]\n\t(No symbol) [0x00284BA4]\n\t(No symbol) [0x002836E8]\n\t(No symbol) [0x00281EEB]\n\t(No symbol) [0x002812FE]\n\t(No symbol) [0x00279AAC]\n\t(No symbol) [0x0029A2BC]\n\t(No symbol) [0x00279586]\n\t(No symbol) [0x0029A614]\n\t(No symbol) [0x002AC482]\n\t(No symbol) [0x0029A0B6]\n\t(No symbol) [0x00277E08]\n\t(No symbol) [0x00278F2D]\n\tGetHandleVerifier [0x00618E3A+2540266]\n\tGetHandleVerifier [0x00658959+2801161]\n\tGetHandleVerifier [0x0065295C+2776588]\n\tGetHandleVerifier [0x00442280+612144]\n\t(No symbol) [0x00354F6C]\n\t(No symbol) [0x003511D8]\n\t(No symbol) [0x003512BB]\n\t(No symbol) [0x00344857]\n\tBaseThreadInitThunk [0x767E6BA9+25]\n\tRtlGetFullPathName_UEx [0x77098F9F+1215]\n\tRtlGetFullPathName_UEx [0x77098F6D+1165]", "trace": "self = <framework.tests.elements_test.TestElements.TestWebTable object at 0x000001E1D73567D0>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"570fabda704ac221785de4e96c158a8a\")>\n\n    @allure.title('Test user can change number of rows in the table.')\n    def test_table_change_number_of_rows(self, driver):\n        \"\"\"Test user can change number of rows in the table.\"\"\"\n        web_table_page = WebTablePage(driver, self.web_page_link)\n        web_table_page.open()\n>       number_of_rows = web_table_page.select_numer_of_rows()\n\nframework\\tests\\elements_test.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nframework\\pages\\elements_page.py:264: in select_numer_of_rows\n    change_number_of_rows_button.click()\n..\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:404: in _execute\n    return self._parent.execute(command, params)\n..\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001E1D7890B10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unk [0x767E6BA9+25]\\\\n\\\\tRtlGetFullPathName_UEx [0x77098F9F+1215]\\\\n\\\\tRtlGetFullPathName_UEx [0x77098F6D+1165]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <select aria-label=\"rows per page\">...</select> is not clickable at point (1056, 891). Other element would receive the click: <span>...</span>\nE         (Session info: chrome=113.0.5672.93)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x003B8893+48451]\nE       \t(No symbol) [0x0034B8A1]\nE       \t(No symbol) [0x00255058]\nE       \t(No symbol) [0x00284BA4]\nE       \t(No symbol) [0x002836E8]\nE       \t(No symbol) [0x00281EEB]\nE       \t(No symbol) [0x002812FE]\nE       \t(No symbol) [0x00279AAC]\nE       \t(No symbol) [0x0029A2BC]\nE       \t(No symbol) [0x00279586]\nE       \t(No symbol) [0x0029A614]\nE       \t(No symbol) [0x002AC482]\nE       \t(No symbol) [0x0029A0B6]\nE       \t(No symbol) [0x00277E08]\nE       \t(No symbol) [0x00278F2D]\nE       \tGetHandleVerifier [0x00618E3A+2540266]\nE       \tGetHandleVerifier [0x00658959+2801161]\nE       \tGetHandleVerifier [0x0065295C+2776588]\nE       \tGetHandleVerifier [0x00442280+612144]\nE       \t(No symbol) [0x00354F6C]\nE       \t(No symbol) [0x003511D8]\nE       \t(No symbol) [0x003512BB]\nE       \t(No symbol) [0x00344857]\nE       \tBaseThreadInitThunk [0x767E6BA9+25]\nE       \tRtlGetFullPathName_UEx [0x77098F9F+1215]\nE       \tRtlGetFullPathName_UEx [0x77098F6D+1165]\n\n..\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: ElementClickInterceptedException"}, "description": "Test user can change number of rows in the table.", "steps": [{"name": "Change table row count appearance.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <select aria-label=\"rows per page\">...</select> is not clickable at point (1056, 891). Other element would receive the click: <span>...</span>\n  (Session info: chrome=113.0.5672.93)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x003B8893+48451]\n\t(No symbol) [0x0034B8A1]\n\t(No symbol) [0x00255058]\n\t(No symbol) [0x00284BA4]\n\t(No symbol) [0x002836E8]\n\t(No symbol) [0x00281EEB]\n\t(No symbol) [0x002812FE]\n\t(No symbol) [0x00279AAC]\n\t(No symbol) [0x0029A2BC]\n\t(No symbol) [0x00279586]\n\t(No symbol) [0x0029A614]\n\t(No symbol) [0x002AC482]\n\t(No symbol) [0x0029A0B6]\n\t(No symbol) [0x00277E08]\n\t(No symbol) [0x00278F2D]\n\tGetHandleVerifier [0x00618E3A+2540266]\n\tGetHandleVerifier [0x00658959+2801161]\n\tGetHandleVerifier [0x0065295C+2776588]\n\tGetHandleVerifier [0x00442280+612144]\n\t(No symbol) [0x00354F6C]\n\t(No symbol) [0x003511D8]\n\t(No symbol) [0x003512BB]\n\t(No symbol) [0x00344857]\n\tBaseThreadInitThunk [0x767E6BA9+25]\n\tRtlGetFullPathName_UEx [0x77098F9F+1215]\n\tRtlGetFullPathName_UEx [0x77098F6D+1165]\n\n", "trace": "  File \"G:\\testing_framework\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"G:\\testing_framework\\testing_framework_selenium_pytest\\framework\\pages\\elements_page.py\", line 264, in select_numer_of_rows\n    change_number_of_rows_button.click()\n  File \"G:\\testing_framework\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"G:\\testing_framework\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 404, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"G:\\testing_framework\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"G:\\testing_framework\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Check if button to change row number is clickable", "status": "passed", "start": 1684170783850, "stop": 1684170783889}, {"name": "Click on button of row number selection", "status": "passed", "start": 1684170783889, "stop": 1684170783931}, {"name": "Check if selection of 5 is available", "status": "passed", "start": 1684170783931, "stop": 1684170783992}, {"name": "Add available 5 to comparison list", "status": "passed", "steps": [{"name": "Check row count appearance.", "status": "passed", "start": 1684170783992, "stop": 1684170784003}], "start": 1684170783992, "stop": 1684170784003}, {"name": "Check if button to change row number is clickable", "status": "passed", "start": 1684170784003, "stop": 1684170784031}, {"name": "Click on button of row number selection", "status": "passed", "start": 1684170784031, "stop": 1684170784142}, {"name": "Check if selection of 10 is available", "status": "passed", "start": 1684170784142, "stop": 1684170784185}, {"name": "Add available 10 to comparison list", "status": "passed", "steps": [{"name": "Check row count appearance.", "status": "passed", "start": 1684170784186, "stop": 1684170784194}], "start": 1684170784185, "stop": 1684170784194}, {"name": "Check if button to change row number is clickable", "status": "passed", "start": 1684170784194, "stop": 1684170784220}, {"name": "Click on button of row number selection", "status": "passed", "start": 1684170784220, "stop": 1684170784254}, {"name": "Check if selection of 20 is available", "status": "passed", "start": 1684170784254, "stop": 1684170784299}, {"name": "Add available 20 to comparison list", "status": "passed", "steps": [{"name": "Check row count appearance.", "status": "passed", "start": 1684170784299, "stop": 1684170784306}], "start": 1684170784299, "stop": 1684170784306}, {"name": "Check if button to change row number is clickable", "status": "passed", "start": 1684170784306, "stop": 1684170784344}, {"name": "Click on button of row number selection", "status": "passed", "start": 1684170784344, "stop": 1684170784397}, {"name": "Check if selection of 25 is available", "status": "passed", "start": 1684170784397, "stop": 1684170784442}, {"name": "Add available 25 to comparison list", "status": "passed", "steps": [{"name": "Check row count appearance.", "status": "passed", "start": 1684170784442, "stop": 1684170784450}], "start": 1684170784442, "stop": 1684170784450}, {"name": "Check if button to change row number is clickable", "status": "passed", "start": 1684170784450, "stop": 1684170784476}, {"name": "Click on button of row number selection", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <select aria-label=\"rows per page\">...</select> is not clickable at point (1056, 891). Other element would receive the click: <span>...</span>\n  (Session info: chrome=113.0.5672.93)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x003B8893+48451]\n\t(No symbol) [0x0034B8A1]\n\t(No symbol) [0x00255058]\n\t(No symbol) [0x00284BA4]\n\t(No symbol) [0x002836E8]\n\t(No symbol) [0x00281EEB]\n\t(No symbol) [0x002812FE]\n\t(No symbol) [0x00279AAC]\n\t(No symbol) [0x0029A2BC]\n\t(No symbol) [0x00279586]\n\t(No symbol) [0x0029A614]\n\t(No symbol) [0x002AC482]\n\t(No symbol) [0x0029A0B6]\n\t(No symbol) [0x00277E08]\n\t(No symbol) [0x00278F2D]\n\tGetHandleVerifier [0x00618E3A+2540266]\n\tGetHandleVerifier [0x00658959+2801161]\n\tGetHandleVerifier [0x0065295C+2776588]\n\tGetHandleVerifier [0x00442280+612144]\n\t(No symbol) [0x00354F6C]\n\t(No symbol) [0x003511D8]\n\t(No symbol) [0x003512BB]\n\t(No symbol) [0x00344857]\n\tBaseThreadInitThunk [0x767E6BA9+25]\n\tRtlGetFullPathName_UEx [0x77098F9F+1215]\n\tRtlGetFullPathName_UEx [0x77098F6D+1165]\n\n", "trace": "  File \"G:\\testing_framework\\testing_framework_selenium_pytest\\framework\\pages\\elements_page.py\", line 264, in select_numer_of_rows\n    change_number_of_rows_button.click()\n  File \"G:\\testing_framework\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"G:\\testing_framework\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 404, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"G:\\testing_framework\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"G:\\testing_framework\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1684170784476, "stop": 1684170785534}], "start": 1684170783850, "stop": 1684170785555}], "start": 1684170778904, "stop": 1684170785558, "uuid": "7712022f-c2fc-4ae8-8a6b-1709e934f15e", "historyId": "5314c39780980d816124f57191aca2d0", "testCaseId": "5314c39780980d816124f57191aca2d0", "fullName": "framework.tests.elements_test.TestWebTable#test_table_change_number_of_rows", "labels": [{"name": "suite", "value": "Elements tab"}, {"name": "feature", "value": "Web Table"}, {"name": "parentSuite", "value": "framework.tests"}, {"name": "subSuite", "value": "TestElements"}, {"name": "host", "value": "Lexx42"}, {"name": "thread", "value": "11292-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "framework.tests.elements_test"}]}